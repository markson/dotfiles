# tmux attach or create new new-session

set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
# set-option -g default-command "reattach-to-user-namespace -l zsh"

#set -g mode-mouse on
# set-window-option -g mode-mouse copy-mode
#set -g mouse-select-window on
#set -g mouse-select-pane on

unbind-key C-b
set -g prefix C-a
bind a send-prefix
#bind-key C-a last-window

bind-key v split-window -h
bind-key s split-window -v

unbind-key c
bind-key n new-window

unbind-key x
bind-key c kill-pane

unbind-key l
#bind-key l next-window
#bind-key h previous-window


# resize panes like vim
bind-key -r < resize-pane -L 3
bind-key -r > resize-pane -R 3
bind-key -r + resize-pane -U 1
bind-key -r = resize-pane -D 1

bind-key o resize-pane -Z \; display-message "Zoom zoom zoom"

unbind-key [
bind Escape copy-mode

set-option -g status-utf8 on
set-option -g status-justify "centre"

#move the window
set-window-option -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

#vi like copy and paste
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-pipe "reattach-to-user-namespace pbcopy"

# Smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

set -g window-status-format '[-#I-]'
set-window-option -g window-status-current-format '[-#I-]'
set -g status-left-length 30
set -g status-right ''
set -g status-left ''

# default statusbar colors
set-option -g status-bg default
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour17
set-window-option -g window-status-current-bg blue
set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg black

set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock


